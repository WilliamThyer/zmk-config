/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        macros {
                copy: copy {
                        compatible = "zmk,behavior-macro";
                        label = "copy";
                        #binding-cells = <0>;
                        wait-ms = <30>;
                        tap-ms = <40>;
                        bindings  
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp C>
                                , <&macro_release &kp LCTRL>
                                ;
                        
                }; 
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  -   |
// | ESC  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  =   |
//                    |SHIFT|BKSPC| NUM |   | NAV | SPACE|ENTER|
                        bindings = <
   &kp TAB   &kp Q &kp W  &kp E     &kp R    &kp T      &kp Y &kp U     &kp I     &kp O   &kp P    &kp MINUS 
   &kp ESC    &kp A &kp S &kp D     &kp F    &kp G      &kp H &kp J     &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL  &kp Z &kp X &kp C     &kp V    &kp B      &kp N &kp M     &kp COMMA &kp DOT &kp FSLH &kp EQUAL
                          &kp LSHFT &kp BKSP &mo 1      &mo 2 &kp SPACE &kp ENTER
                        
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  |   |
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  '   |
// | CTRL | ESC |  ~  |  `  |  {  |  }  |   |  [  |  ]  |  ,  |  .  |  /  |  \   |
//                    |SHIFT|BKSPC|     |   |     |SPACE|ENTER|
                        bindings = <
   &trans  &kp EXCL &kp AT    &kp HASH  &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp PIPE
   &trans  &kp N1   &kp N2    &kp N3    &kp N4   &kp N5      &kp N6    &kp N7   &kp N8          &kp N9   &kp N0   &trans
   &trans  &kp ESC  &kp TILDE &kp GRAVE &kp LBRC &kp RBRC    &kp LBKT  &kp RBKT &trans          &trans   &trans   &kp BSLH
                              &trans    &trans   &trans      &trans    &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  F1  |  F2  |  F3  |  F4  |  F5  |   |  F6  |  F7  |  F8  |  F9  |  F10  |     |
// |  ESC | HOME |  END |  ALT |  WIN | PG UP|   |  LFT | DOWN |  UP  | RGHT |       | F11 |
// | CTRL |      |      |      |      | PG DN|   | PLAY | RWND | FFWD | VOLDN| VOLUP | F12 |
//                      | SHIFT| BKSPC|      |   |      | SPACE| ENTER|
                        bindings = <
   &trans &kp F1   &kp F2  &kp F3   &kp F4   &kp F5         &kp F6           &kp F7     &kp F8     &kp F9       &kp F10      &none
   &trans &kp HOME &kp END &kp LALT &kp LGUI &kp PG_UP      &kp LEFT         &kp DOWN   &kp UP     &kp RIGHT    &none        &kp F11
   &trans &none    &none   &macro copy  &none    &kp PG_DN      &kp C_PLAY_PAUSE &kp C_PREV &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp F12 
                    	   &trans   &trans   &trans         &trans           &trans     &trans
                        >;
                };
        };
};
